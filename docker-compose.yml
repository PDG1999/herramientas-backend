# Einfache Docker Compose für SAMEBI Backend
# Separate Container für PostgreSQL und PostgREST

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: herramientas_db
    environment:
      POSTGRES_DB: herramientas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgrest:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: herramientas_api
    environment:
      PGRST_DB_URI: postgres://postgres:secure_password_123@postgres:5432/herramientas
      PGRST_DB_SCHEMAS: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: your-jwt-secret-key-here-min-32-chars
      PGRST_SERVER_HOST: 0.0.0.0
      PGRST_SERVER_PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    # Coolify Labels
    labels:
      - "coolify.managed=true"
      - "coolify.name=herramientas-backend"
      - "coolify.http.domain=api.samebi.net"
      - "coolify.http.port=3000"

volumes:
  postgres_data:
    driver: local
